name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [main]
    # paths-ignore:
    #   - .github/**

env:
  DOTNET_VERSION: 8.x
  APP_NAME: 'Backend'
  DEPLOY_PATH: '/home/ubuntu/Backend'
  PORT: 22

jobs:
  test-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}
      - name: Run Tests
        run: dotnet test ./Backend.Test/Backend.Test.csproj --verbosity normal

  build-stage:
    needs: test-stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}
      - name: Restore Dependencies
        run: dotnet restore ./Backend/Backend.csproj

      - name: Build Project
        run: dotnet build ./Backend/Backend.csproj --no-restore

      - name: Create AppSettings Json
        run: echo '${{secrets.APPSETTINGS}}' > ./Backend/bin/Debug/net8.0/appsettings.json


      # gzip Files
      - name: Zip Files
        run: tar -zcvf backend.tar.gz ./Backend/bin/Debug/net8.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: ./backend.tar.gz

  deploy-stage:
    needs: build-stage
    runs-on: ubuntu-latest
    steps:

      # Download Files
      - name: Get build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
    
        # Deploy Files to Server with sftp
      - name: Deploy Files
        uses: wlixcc/SFTP-Deploy-Action@v1.2.5
        with:
            username: ${{ secrets.SERVER_USERNAME }}
            server: ${{ secrets.SERVER_IP }}
            ssh_private_key: ${{ secrets.SERVER_SSH_KEY }} 
            local_path: './backend.tar.gz'
            remote_path: ${{env.DEPLOY_PATH}}

      # gzip unpack
      - name: Install Dependencies on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{env.PORT}}
          script: |
            cd ${{env.DEPLOY_PATH}}
            rm -rf ./*
            tar -xzvf backend.tar.gz
            


      #       pm2 delete '${{env.APP_NAME}}'
      #       pm2 start npm --name '${{env.APP_NAME}}' -- start
      #       pm2 save